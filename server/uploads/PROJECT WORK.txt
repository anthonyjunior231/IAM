Conclusion

Identity Access Management (IAM) platforms are critical for organizations to manage user identities and control access to resources, aiming to enhance security and productivity while reducing costs (Paiusescu et al., 2018). These platforms often involve deploying applications across multiple locations to ensure fault tolerance and high availability (Paiusescu et al., 2018). However, challenges arise when there are frequent changes in employee roles, leading to outdated electronic privileges (Young, 2004). Incorporating human resources (HR) intelligence can streamline the IAM project lifecycle by leveraging existing data and structures within the business (Young, 2004).

Interestingly, while IAM is traditionally focused on internal stakeholders, Customer Identity and Access Management (CIAM) extends these principles to customers, emphasizing the need for auditing to manage risks and comply with regulations (Podugu et al., 2023). IAM within cloud services, such as Amazon Web Services (AWS), highlights the importance of robust authentication and authorization processes, including multi-factor authentication (MFA) to secure cloud resources (Talluri & USA, 2023).

In conclusion, IAM projects are multifaceted, requiring a comprehensive approach that includes understanding the roles, characteristics, advantages, and potential challenges of IAM (Singh et al., 2023). Organizations must carefully select and implement IAM services, considering the growing number of applications and regulatory requirements (Haag & Spruit, 2012). The integration of HR processes, attention to customer access (CIAM), and the use of cloud-based IAM services (Talluri & USA, 2023) are all critical components that contribute to the success of an IAM project. Effective IAM is essential for maintaining an organization's information security posture and resilience against cyber attacks (V. & S., 2022).

Efficient Datacenters Management for Network and Security Operations Copy DOI
Lucian Paiusescu, Valeriu Vraciu, Mihai Barbulescu, Mihai Carabas, Alexandru Ioan Cuza
Sep 2018

Human Resources have a vital role to play within employee identity and access management Copy DOI
Dale Young
Network Security - Nov 2004
https://doi.org/10.1016/s1353-4858(04)00154-0

IAM Identity Access Management—Importance in Maintaining Security Systems within Organizations Copy DOI
Chetanpal Singh, Rahul Thakkar, Jatinder Warraich
European Journal of Engineering and Technology Research - Aug 2023
https://doi.org/10.24018/ejeng.2023.8.4.3074

Auditing Customer Identity and Access Management Copy DOI
Sushmita Podugu, Manish Gupta, Vamsi Krishna Rayapureddi
Sep 2023
https://doi.org/10.4018/978-1-6684-8766-2.ch007


Managing Identity and Access Management (IAM) in Amazon Web Services (AWS) Copy DOI
Sampath Talluri, USA
Journal of Artificial Intelligence &amp; Cloud Computing - Mar 2023
https://doi.org/10.47363/jaicc/2023(2)147


Selecting and Implementing Identity and Access Management Technologies Copy DOI
Peter Haag, Marco Spruit
Jan 2012
https://doi.org/10.4018/978-1-61350-498-7.ch018

Identity and Access Management: High-level Conceptual Framework Copy DOI
Ramteke, V., Devlekar, S.
CARDIOMETRY - Nov 2022
https://doi.org/10.18137/cardiometry.2022.24.393399


=======================================
ABSTRACT 

Identity management refers to the process of employing emerging technologies to manage information about the identity of users and control access to organization resources. The goal of identity management is to improve productivity and security while lowering costs associated with managing users and their identities, attributes, and credentials. The purpose of this document is to offer a broad overview of the IAM project that is being developed and tested within RoEduNet's infrastructure and giving the opportunity to bring a contribution that would benefit the organization. In this paper we are presenting the architecture with the components used and how they integrate as well as the deployment of the application in two locations across the country to provide a fault tolerance high availability scenario.


